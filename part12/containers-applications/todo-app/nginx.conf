events { }

http {
  server {
    listen 80;

    # Requests starting with root (/) are handled
    location / {
      # The following 3 lines are required for the hot loading to work (websocket).
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      
      # Requests are directed to http://localhost:3000
      proxy_pass http://todo-frontend-dev:3000;
    }

    # Requests starting with /api/ are handled
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';

      rewrite /api/(.*) /$1  break;
      # Requests are directed to the backend server
      proxy_pass http://todo-backend-dev:3001;

      # This is optional but recommended: it modifies the response from the backend
      # so that the client's browser will think it came from the original server.
      proxy_set_header Host $host;
      
      # This is optional but recommended: it will modify the Location and other
      # headers that the backend might return, replacing the backend hostname and 
      # port with the ones from the original client request.
      proxy_redirect off;
      
      # This will add the X-Real-IP header to the backend request, with the value
      # of the client's IP address. This can be useful if your backend needs to know
      # the IP of the client.
      proxy_set_header X-Real-IP $remote_addr;
      
      # This will add the X-Forwarded-For header to the backend request, with the value
      # of the client's IP address. This is the standard way of identifying the client's
      # IP when using a reverse proxy, and most backends will log this IP.
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
